name: JavaScript Tests

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  python-version: '3.12'

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13]
        group: [notebook, base, services]
        exclude:
          - group: services
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.python-version }}
      - name: Set up Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: '18.x'

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache yarn
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashfiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache pip on Linux
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.python-version }}-${{ hashfiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.python-version }}

      - name: Cache pip on macOS
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ env.python-version }}-${{ hashfiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.python-version }}

      - name: Temporary workaround for sanitizer loading in JS Tests
        run: |
          cp tools/security_deprecated.js nbclassic/static/base/js/security.js

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          npm install -g casperjs@1.1.4 phantomjs-prebuilt@2.1.16
          pip install .[test]

      - name: Run Tests
        run: |
          python -m nbclassic.jstest ${{ matrix.group }}
